<?xml version="1.0"?>
<analyzerinfo hash="14838113727603416591">
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ZTreeMgr.h" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="windows_compat.h" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="windows_compat.h" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;zlib.h&quot; not found." verbose="Include file: &quot;zlib.h&quot; not found.">
            <location file="ZTreeMgr.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ZTreeMgr.cpp" line="3" column="0"/>
        </error>
        <error id="normalCheckLevelConditionExpressions" severity="debug" msg="Analysis of condition expressions is disabled. Use --check-level=exhaustive to enable it." verbose="Analysis of condition expressions is disabled. Use --check-level=exhaustive to enable it." file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.cpp" line="0" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ntreebuf is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ntreebuf is changed in conditional block" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.cpp" line="78" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: size is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: size is changed in conditional block" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.cpp" line="78" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.cpp" line="91" column="2"/>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ZTreeMgr::ReleaseData&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ZTreeMgr::ReleaseData&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.h" line="99" column="7"/>
            <location file="ZTreeMgr.cpp" line="208" column="16"/>
            <symbol>ZTreeMgr::ReleaseData</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ZTreeMgr::Inflate&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ZTreeMgr::Inflate&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.h" line="106" column="8"/>
            <location file="ZTreeMgr.cpp" line="197" column="17"/>
            <symbol>ZTreeMgr::Inflate</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;ZTreeMgr&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;ZTreeMgr&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.cpp" line="99" column="2"/>
            <symbol>ZTreeMgr</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;ZTreeMgr&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;ZTreeMgr&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.cpp" line="99" column="2"/>
            <symbol>ZTreeMgr</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;flags&apos; shadows outer variable" verbose="Local variable &apos;flags&apos; shadows outer variable" cwe="398" file0="ZTreeMgr.cpp">
            <location file="ZTreeMgr.cpp" line="34" column="12" info="Shadow variable"/>
            <location file="ZTreeMgr.h" line="44" column="8" info="Shadowed declaration"/>
            <symbol>flags</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="ZTreeMgr.h:94:8" call-funcname="ReadData" call-argnr="2" file="ZTreeMgr.h" line="97" col="11" my-id="ZTreeMgr.h:96:15" my-argnr="4"/>
<function-call call-id="ZTreeMgr.h:87:2" call-funcname="ZTreeMgr" call-argnr="1" file="ZTreeMgr.cpp" line="87" col="22" my-id="ZTreeMgr.h:86:19" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Class">
<class name="TreeNode" file="ZTreeMgr.h" line="18" col="1" hash="12582209069392340624"/>
<class name="TreeFileHeader" file="ZTreeMgr.h" line="33" col="1" hash="4894198256522515901"/>
<class name="TreeTOC" file="ZTreeMgr.h" line="57" col="1" hash="13956951906374406138"/>
<class name="ZTreeMgr" file="ZTreeMgr.h" line="83" col="1" hash="16232316498148589189"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="ZTreeMgr.h:38:12" my-argnr="1" my-argname="f" file="ZTreeMgr.cpp" line="26" col="51" value="0"/>
    <unsafe-usage my-id="ZTreeMgr.h:39:10" my-argnr="1" my-argname="f" file="ZTreeMgr.cpp" line="35" col="25" value="0"/>
    <unsafe-usage my-id="ZTreeMgr.h:63:9" my-argnr="2" my-argname="f" file="ZTreeMgr.cpp" line="79" col="47" value="0"/>
    <unsafe-usage my-id="ZTreeMgr.h:87:2" my-argnr="1" my-argname="PlanetPath" file="ZTreeMgr.cpp" line="99" col="25" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="ZTreeMgr.h:38:12" my-argnr="1" my-argname="f" file="ZTreeMgr.cpp" line="26" col="51" value="0"/>
    <unsafe-usage my-id="ZTreeMgr.h:39:10" my-argnr="1" my-argname="f" file="ZTreeMgr.cpp" line="35" col="25" value="0"/>
    <unsafe-usage my-id="ZTreeMgr.h:63:9" my-argnr="2" my-argname="f" file="ZTreeMgr.cpp" line="79" col="47" value="0"/>
    <unsafe-usage my-id="ZTreeMgr.h:87:2" my-argnr="1" my-argname="PlanetPath" file="ZTreeMgr.cpp" line="99" col="25" value="0"/>
    <unsafe-usage my-id="ZTreeMgr.h:99:7" my-argnr="1" my-argname="data" file="ZTreeMgr.cpp" line="210" col="11" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl file="ZTreeMgr.h" functionName="size" lineNumber="64"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="67"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="70"/>
    <functiondecl file="ZTreeMgr.h" functionName="TOC" lineNumber="89"/>
    <functiondecl file="ZTreeMgr.h" functionName="ReadData" lineNumber="96"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="101"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="102"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="fwrite" lineNumber="24"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="fread" lineNumber="31"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="fread" lineNumber="71"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="CreateFromFile" lineNumber="85"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="OpenArchive" lineNumber="116"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="Idx" lineNumber="149"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="ReadData" lineNumber="167"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="Inflate" lineNumber="197"/>
    <functiondecl file="ZTreeMgr.cpp" functionName="ReleaseData" lineNumber="208"/>
    <functioncall functionName="Idx"/>
    <functioncall functionName="Inflate"/>
    <functioncall functionName="NodeSizeDeflated"/>
    <functioncall functionName="NodeSizeInflated"/>
    <functioncall functionName="OpenArchive"/>
    <functioncall functionName="ReadData"/>
    <functioncall functionName="TOC"/>
    <functioncall functionName="TreeFileHeader"/>
    <functioncall functionName="TreeNode"/>
    <functioncall functionName="TreeTOC"/>
    <functioncall functionName="ZTreeMgr"/>
    <functioncall functionName="false"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="fread"/>
    <functioncall functionName="fseeko64"/>
    <functioncall functionName="fwrite"/>
    <functioncall functionName="memcmp"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sprintf"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uLongf"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="uncompress"/>
  </FileInfo>
        <error id="purgedConfiguration" severity="information" msg="The configuration &apos;_M_X64;__x86_64__&apos; was not checked because its code equals another one." verbose="The configuration &apos;_M_X64;__x86_64__&apos; was not checked because its code equals another one.">
            <location file="ZTreeMgr.cpp" line="0" column="0"/>
        </error>
</analyzerinfo>
