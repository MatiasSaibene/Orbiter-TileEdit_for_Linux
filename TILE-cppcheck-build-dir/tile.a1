<?xml version="1.0"?>
<analyzerinfo hash="1885153632990330917">
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="windows_compat.h" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="windows_compat.h" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tile.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="imagetools.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ZTreeMgr.h" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tile.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tile.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/stat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/stat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tile.cpp" line="5" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="tile.cpp">
            <location file="tile.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelConditionExpressions" severity="debug" msg="Analysis of condition expressions is disabled. Use --check-level=exhaustive to enable it." verbose="Analysis of condition expressions is disabled. Use --check-level=exhaustive to enable it." file0="tile.cpp">
            <location file="tile.cpp" line="0" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_idata.height&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_idata.height&apos; used in loop" file0="tile.cpp">
            <location file="tile.cpp" line="209" column="16"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_idata.width&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_idata.width&apos; used in loop" file0="tile.cpp">
            <location file="tile.cpp" line="210" column="17"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="297" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: lvl is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: lvl is changed in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="297" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: v is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: v is changed in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="320" column="4"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: idata.data[xofs+x+(yofs+y)*512] is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: idata.data[xofs+x+(yofs+y)*512] is changed in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="320" column="4"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="178" column="3"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_idata.data.size() is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_idata.data.size() is changed in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="139" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: mode is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: mode is changed in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="136" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ok is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ok is changed in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="149" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="149" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_sublvl is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_sublvl is changed in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="179" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="163" column="3"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="167" column="3"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="188" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="196" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="285" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tile.cpp">
            <location file="tile.cpp" line="353" column="2"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;lat_subrange&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;lat_subrange&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="tile.cpp">
            <location file="tile.cpp" line="47" column="2"/>
            <symbol>lat_subrange</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;lng_subrange&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;lng_subrange&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="tile.cpp">
            <location file="tile.cpp" line="48" column="2"/>
            <symbol>lng_subrange</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;m_idata&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_idata&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="tile.cpp">
            <location file="tile.cpp" line="99" column="2"/>
            <symbol>m_idata</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Tile::ensureLayerDir&apos; can be const." verbose="The member function &apos;Tile::ensureLayerDir&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="tile.cpp">
            <location file="tile.h" line="104" column="10"/>
            <location file="tile.cpp" line="78" column="12"/>
            <symbol>Tile::ensureLayerDir</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;Tile::ensureTmpLayerDir&apos; can be const." verbose="The member function &apos;Tile::ensureTmpLayerDir&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="tile.cpp">
            <location file="tile.h" line="105" column="10"/>
            <location file="tile.cpp" line="83" column="12"/>
            <symbol>Tile::ensureTmpLayerDir</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;DXT1Tile::LoadData&apos; can be const." verbose="The member function &apos;DXT1Tile::LoadData&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="tile.cpp">
            <location file="tile.h" line="139" column="10"/>
            <location file="tile.cpp" line="182" column="16"/>
            <symbol>DXT1Tile::LoadData</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="128" column="18" info="Function in derived class"/>
            <location file="tile.h" line="86" column="18" info="Virtual function in base class"/>
            <symbol>set</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="153" column="23" info="Function in derived class"/>
            <location file="tile.h" line="94" column="31" info="Virtual function in base class"/>
            <symbol>Layer</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="154" column="10" info="Function in derived class"/>
            <location file="tile.h" line="101" column="18" info="Virtual function in base class"/>
            <symbol>mapToAncestors</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="166" column="23" info="Function in derived class"/>
            <location file="tile.h" line="94" column="31" info="Virtual function in base class"/>
            <symbol>Layer</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="258" column="18" info="Function in derived class"/>
            <location file="tile.h" line="192" column="18" info="Virtual function in base class"/>
            <symbol>ExtractImage</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="273" column="19" info="Function in derived class"/>
            <location file="tile.h" line="212" column="19" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="274" column="18" info="Function in derived class"/>
            <location file="tile.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="275" column="18" info="Function in derived class"/>
            <location file="tile.h" line="222" column="18" info="Virtual function in base class"/>
            <symbol>syncTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="283" column="19" info="Function in derived class"/>
            <location file="tile.h" line="212" column="19" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="284" column="18" info="Function in derived class"/>
            <location file="tile.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="285" column="18" info="Function in derived class"/>
            <location file="tile.h" line="258" column="18" info="Virtual function in base class"/>
            <symbol>ExtractImage</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="299" column="10" info="Function in derived class"/>
            <location file="tile.h" line="194" column="18" info="Virtual function in base class"/>
            <symbol>setTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="302" column="19" info="Function in derived class"/>
            <location file="tile.h" line="212" column="19" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="303" column="18" info="Function in derived class"/>
            <location file="tile.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="317" column="10" info="Function in derived class"/>
            <location file="tile.h" line="222" column="18" info="Virtual function in base class"/>
            <symbol>syncTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="324" column="10" info="Function in derived class"/>
            <location file="tile.h" line="192" column="18" info="Virtual function in base class"/>
            <symbol>ExtractImage</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="351" column="23" info="Function in derived class"/>
            <location file="tile.h" line="94" column="31" info="Virtual function in base class"/>
            <symbol>Layer</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="354" column="18" info="Function in derived class"/>
            <location file="tile.h" line="86" column="18" info="Virtual function in base class"/>
            <symbol>set</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tile.cpp">
            <location file="tile.h" line="365" column="10" info="Function in derived class"/>
            <location file="tile.h" line="101" column="18" info="Virtual function in base class"/>
            <symbol>mapToAncestors</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;setTreeMgr&apos; argument 1 names different: declaration &apos;mgr&apos; definition &apos;treeMgr&apos;." verbose="Function &apos;setTreeMgr&apos; argument 1 names different: declaration &apos;mgr&apos; definition &apos;treeMgr&apos;." cwe="628" inconclusive="true" file0="tile.cpp">
            <location file="tile.cpp" line="333" column="43"/>
            <location file="tile.h" line="152" column="44"/>
            <symbol>setTreeMgr</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;setTreeMgr&apos; argument 1 names different: declaration &apos;mgr&apos; definition &apos;treeMgr&apos;." verbose="Function &apos;setTreeMgr&apos; argument 1 names different: declaration &apos;mgr&apos; definition &apos;treeMgr&apos;." cwe="628" inconclusive="true" file0="tile.cpp">
            <location file="tile.cpp" line="357" column="43"/>
            <location file="tile.h" line="165" column="44"/>
            <symbol>setTreeMgr</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="dxt_io.h:19:6" call-funcname="dxt1write" call-argnr="1" file="tile.cpp" line="120" col="11" call-argexpr="path" call-argvaluetype="7" call-argvalue="1024" call-argvalue-ufr="0"/><function-call call-id="dxt_io.h:22:6" call-funcname="pngwrite_tmp" call-argnr="1" file="tile.cpp" line="128" col="14" call-argexpr="path" call-argvaluetype="7" call-argvalue="1024" call-argvalue-ufr="0"/><function-call call-id="dxt_io.h:21:6" call-funcname="pngread_tmp" call-argnr="1" file="tile.cpp" line="147" col="23" call-argexpr="path" call-argvaluetype="7" call-argvalue="1024" call-argvalue-ufr="0"/><function-call call-id="ddsread.h:9:7" call-funcname="ddsread" call-argnr="1" file="tile.cpp" line="187" col="15" call-argexpr="path" call-argvaluetype="7" call-argvalue="1024" call-argvalue-ufr="0"/><function-call call-id="ZTreeMgr.h:94:8" call-funcname="ReadData" call-argnr="2" file="ZTreeMgr.h" line="97" col="11" my-id="ZTreeMgr.h:96:15" my-argnr="4"/>
<function-call call-id="tile.h:139:10" call-funcname="LoadData" call-argnr="5" file="tile.cpp" line="133" col="2" my-id="tile.h:136:10" my-argnr="1"/>
<function-call call-id="tile.h:139:10" call-funcname="LoadData" call-argnr="5" file="tile.cpp" line="172" col="3" my-id="tile.h:138:10" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Class">
<class name="TreeNode" file="ZTreeMgr.h" line="18" col="1" hash="12582209069392340624"/>
<class name="ElevDisplayParam" file="tile.h" line="49" col="1" hash="2206908051769139680"/>
<class name="DXT1Tile" file="tile.h" line="121" col="1" hash="7205643257173216150"/>
<class name="SurfTile" file="tile.h" line="145" col="1" hash="396214466300822950"/>
<class name="MaskTile" file="tile.h" line="161" col="1" hash="13949845860734697677"/>
<class name="SurfPatchMetaInfo" file="dxt_io.h" line="9" col="1" hash="12557298948941483070"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tile.h:68:6" my-argnr="1" my-argname="rootDir" file="tile.cpp" line="17" col="25" value="0"/>
    <unsafe-usage my-id="tile.h:68:6" my-argnr="2" my-argname="layer" file="tile.cpp" line="17" col="34" value="0"/>
    <unsafe-usage my-id="tile.h:86:18" my-argnr="1" my-argname="tile" file="tile.cpp" line="53" col="10" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tile.h:76:5" my-argnr="1" my-argname="tile" file="tile.cpp" line="41" col="10" value="0"/>
    <unsafe-usage my-id="tile.h:86:18" my-argnr="1" my-argname="tile" file="tile.cpp" line="53" col="10" value="0"/>
    <unsafe-usage my-id="tile.h:127:5" my-argnr="1" my-argname="tile" file="tile.cpp" line="99" col="12" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl file="ZTreeMgr.h" functionName="size" lineNumber="64"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="67"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="70"/>
    <functiondecl file="ZTreeMgr.h" functionName="TOC" lineNumber="89"/>
    <functiondecl file="ZTreeMgr.h" functionName="ReadData" lineNumber="96"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="101"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="102"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="65"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="66"/>
    <functiondecl file="tile.h" functionName="Level" lineNumber="77"/>
    <functiondecl file="tile.h" functionName="iLat" lineNumber="78"/>
    <functiondecl file="tile.h" functionName="iLng" lineNumber="79"/>
    <functiondecl file="tile.h" functionName="subLevel" lineNumber="80"/>
    <functiondecl file="tile.h" functionName="subiLat" lineNumber="81"/>
    <functiondecl file="tile.h" functionName="subiLng" lineNumber="82"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="83"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="84"/>
    <functiondecl file="tile.h" functionName="setLevel" lineNumber="87"/>
    <functiondecl file="tile.h" functionName="setiLat" lineNumber="88"/>
    <functiondecl file="tile.h" functionName="setiLng" lineNumber="89"/>
    <functiondecl file="tile.h" functionName="setSubLevel" lineNumber="90"/>
    <functiondecl file="tile.h" functionName="setSubiLat" lineNumber="91"/>
    <functiondecl file="tile.h" functionName="setSubiLng" lineNumber="92"/>
    <functiondecl file="tile.h" functionName="root" lineNumber="97"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="129"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="130"/>
    <functiondecl file="tile.h" functionName="Level" lineNumber="179"/>
    <functiondecl file="tile.h" functionName="iLat0" lineNumber="181"/>
    <functiondecl file="tile.h" functionName="iLat1" lineNumber="182"/>
    <functiondecl file="tile.h" functionName="iLng0" lineNumber="183"/>
    <functiondecl file="tile.h" functionName="iLng1" lineNumber="184"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="185"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="186"/>
    <functiondecl file="tile.h" functionName="iLng_norm" lineNumber="187"/>
    <functiondecl file="tile.h" functionName="nLatBlock" lineNumber="188"/>
    <functiondecl file="tile.h" functionName="nLngBlock" lineNumber="189"/>
    <functiondecl file="tile.h" functionName="nBlock" lineNumber="190"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="260"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="261"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="300"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="301"/>
    <functiondecl file="tile.h" functionName="isModified" lineNumber="311"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="356"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="357"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="358"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="359"/>
    <functiondecl file="tile.h" functionName="isModified" lineNumber="360"/>
    <functiondecl file="tile.cpp" functionName="ensureLayerDir" lineNumber="14"/>
    <functiondecl file="tile.cpp" functionName="setRoot" lineNumber="63"/>
    <functiondecl file="tile.cpp" functionName="setOpenMode" lineNumber="68"/>
    <functiondecl file="tile.cpp" functionName="setGlobalLoadMode" lineNumber="73"/>
    <functiondecl file="tile.cpp" functionName="ensureLayerDir" lineNumber="78"/>
    <functiondecl file="tile.cpp" functionName="ensureTmpLayerDir" lineNumber="83"/>
    <functiondecl file="tile.cpp" functionName="set" lineNumber="102"/>
    <functiondecl file="tile.cpp" functionName="TileSize" lineNumber="110"/>
    <functiondecl file="tile.cpp" functionName="SaveDXT1" lineNumber="115"/>
    <functiondecl file="tile.cpp" functionName="SavePNGtmp" lineNumber="123"/>
    <functiondecl file="tile.cpp" functionName="LoadDXT1" lineNumber="131"/>
    <functiondecl file="tile.cpp" functionName="LoadPNGtmp" lineNumber="143"/>
    <functiondecl file="tile.cpp" functionName="LoadSubset" lineNumber="153"/>
    <functiondecl file="tile.cpp" functionName="LoadData" lineNumber="182"/>
    <functiondecl file="tile.cpp" functionName="ProlongToChildren" lineNumber="199"/>
    <functiondecl file="tile.cpp" functionName="Load" lineNumber="238"/>
    <functiondecl file="tile.cpp" functionName="InterpolateFromAncestor" lineNumber="248"/>
    <functiondecl file="tile.cpp" functionName="Save" lineNumber="258"/>
    <functiondecl file="tile.cpp" functionName="InterpolateFromAncestor" lineNumber="264"/>
    <functiondecl file="tile.cpp" functionName="mapToAncestors" lineNumber="282"/>
    <functiondecl file="tile.cpp" functionName="setTreeMgr" lineNumber="333"/>
    <functiondecl file="tile.cpp" functionName="Load" lineNumber="346"/>
    <functiondecl file="tile.cpp" functionName="setTreeMgr" lineNumber="357"/>
    <functioncall functionName="DXT1Tile"/>
    <functioncall functionName="ElevData"/>
    <functioncall functionName="ElevDisplayParam"/>
    <functioncall functionName="ElevTileBlock"/>
    <functioncall functionName="Idx"/>
    <functioncall functionName="Image"/>
    <functioncall functionName="InterpolateFromAncestor"/>
    <functioncall functionName="Layer"/>
    <functioncall functionName="Load"/>
    <functioncall functionName="LoadDXT1"/>
    <functioncall functionName="LoadData"/>
    <functioncall functionName="LoadPNGtmp"/>
    <functioncall functionName="LoadSubset"/>
    <functioncall functionName="MaskTile"/>
    <functioncall functionName="NodeSizeDeflated"/>
    <functioncall functionName="NodeSizeInflated"/>
    <functioncall functionName="ProlongToChildren"/>
    <functioncall functionName="ReadData"/>
    <functioncall functionName="ReleaseData"/>
    <functioncall functionName="Save"/>
    <functioncall functionName="SaveDXT1"/>
    <functioncall functionName="SavePNGtmp"/>
    <functioncall functionName="SubImage"/>
    <functioncall functionName="SurfTile"/>
    <functioncall functionName="SurfTileBlock"/>
    <functioncall functionName="Tile"/>
    <functioncall functionName="TileBlock"/>
    <functioncall functionName="TileSize"/>
    <functioncall functionName="TreeNode"/>
    <functioncall functionName="ZTreeMgr"/>
    <functioncall functionName="_getTile"/>
    <functioncall functionName="assign"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="cmap"/>
    <functioncall functionName="copyTile"/>
    <functioncall functionName="ddsread"/>
    <functioncall functionName="ddsscan"/>
    <functioncall functionName="dxt1write"/>
    <functioncall functionName="ensureLayerDir"/>
    <functioncall functionName="ensureTmpLayerDir"/>
    <functioncall functionName="false"/>
    <functioncall functionName="getData"/>
    <functioncall functionName="make_pair"/>
    <functioncall functionName="min"/>
    <functioncall functionName="mkdir"/>
    <functioncall functionName="nLat"/>
    <functioncall functionName="nLng"/>
    <functioncall functionName="pair"/>
    <functioncall functionName="pngread_tmp"/>
    <functioncall functionName="pngwrite_tmp"/>
    <functioncall functionName="set"/>
    <functioncall functionName="setSubLevel"/>
    <functioncall functionName="setSubiLat"/>
    <functioncall functionName="setSubiLng"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sprintf"/>
    <functioncall functionName="string"/>
    <functioncall functionName="syncTiles"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="vector"/>
  </FileInfo>
        <error id="purgedConfiguration" severity="information" msg="The configuration &apos;_M_X64;__x86_64__&apos; was not checked because its code equals another one." verbose="The configuration &apos;_M_X64;__x86_64__&apos; was not checked because its code equals another one.">
            <location file="tile.cpp" line="0" column="0"/>
        </error>
</analyzerinfo>
