<?xml version="1.0"?>
<analyzerinfo hash="13665568736572916305">
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="windows_compat.h" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="windows_compat.h" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tile.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="imagetools.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ZTreeMgr.h" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tileblock.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tileblock.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tileblock.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cfloat&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cfloat&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="tileblock.cpp" line="7" column="0"/>
        </error>
        <error id="autoNoType" severity="debug" msg="auto token with no type." verbose="auto token with no type." file0="tileblock.cpp">
            <location file="tileblock.cpp" line="656" column="2"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="tileblock.cpp">
            <location file="tileblock.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelConditionExpressions" severity="debug" msg="Analysis of condition expressions is disabled. Use --check-level=exhaustive to enable it." verbose="Analysis of condition expressions is disabled. Use --check-level=exhaustive to enable it." file0="tileblock.cpp">
            <location file="tileblock.cpp" line="0" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_tile.size()&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_tile.size()&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="20" column="20"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_tile.size()&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;m_tile.size()&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="34" column="20"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.height&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.height&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="212" column="22"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.width&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.width&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="214" column="24"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;img.data.size()&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;img.data.size()&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="268" column="21"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;img.data.size()&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;img.data.size()&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="271" column="21"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.height&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.height&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="300" column="22"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.width&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;im.width&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="302" column="24"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;tileGrid.size()&apos; used in loop" verbose="valueflow.cpp:4482:(valueFlow) bailout: variable &apos;tileGrid.size()&apos; used in loop" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="567" column="16"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="21" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="35" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_tile[idx]-&gt;subLevel() is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_tile[idx]-&gt;subLevel() is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="50" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: subLevel is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: subLevel is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="50" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="75" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilat is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilat is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="83" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilng is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilng is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="83" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="90" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="269" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="272" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilat is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilat is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="450" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilng is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilng is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="450" column="4"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilat is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilat is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="462" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilng is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ilng is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="462" column="4"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="499" column="5"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="568" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: i is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="616" column="5"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="615" column="6"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: eps is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: eps is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="615" column="6"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="636" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="50" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="57" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="58" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="66" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="67" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="123" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="124" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="137" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="138" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="154" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="155" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: stile is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: stile is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="166" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="171" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="237" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="238" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="251" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="252" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="354" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="366" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="383" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="384" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="397" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="398" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="412" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="413" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_isModified is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_isModified is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="452" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_isModified is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: m_isModified is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="464" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="510" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="511" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: etile is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: etile is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="522" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: edata.width is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: edata.width is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="527" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="527" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: edata.height is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: edata.height is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="527" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ebdata.width is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ebdata.width is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="532" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="532" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ebdata.height is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: ebdata.height is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="532" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: etile-&gt;m_modified is changed in conditional block" verbose="valueflow.cpp:4746:(valueFlow) bailout: valueFlowAfterCondition: etile-&gt;m_modified is changed in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="551" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="576" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="580" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="686" column="2"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="706" column="0"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="725" column="2"/>
        </error>
        <error id="missingMemberCopy" severity="warning" msg="Member variable &apos;ElevTileBlock::m_waterMask&apos; is not assigned in the copy constructor. Should it be copied?" verbose="Member variable &apos;ElevTileBlock::m_waterMask&apos; is not assigned in the copy constructor. Should it be copied?" cwe="398" inconclusive="true" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="334" column="16"/>
            <symbol>ElevTileBlock::m_waterMask</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="128" column="18" info="Function in derived class"/>
            <location file="tile.h" line="86" column="18" info="Virtual function in base class"/>
            <symbol>set</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="153" column="23" info="Function in derived class"/>
            <location file="tile.h" line="94" column="31" info="Virtual function in base class"/>
            <symbol>Layer</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="154" column="10" info="Function in derived class"/>
            <location file="tile.h" line="101" column="18" info="Virtual function in base class"/>
            <symbol>mapToAncestors</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="166" column="23" info="Function in derived class"/>
            <location file="tile.h" line="94" column="31" info="Virtual function in base class"/>
            <symbol>Layer</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="258" column="18" info="Function in derived class"/>
            <location file="tile.h" line="192" column="18" info="Virtual function in base class"/>
            <symbol>ExtractImage</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="273" column="19" info="Function in derived class"/>
            <location file="tile.h" line="212" column="19" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="274" column="18" info="Function in derived class"/>
            <location file="tile.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="275" column="18" info="Function in derived class"/>
            <location file="tile.h" line="222" column="18" info="Virtual function in base class"/>
            <symbol>syncTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="283" column="19" info="Function in derived class"/>
            <location file="tile.h" line="212" column="19" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="284" column="18" info="Function in derived class"/>
            <location file="tile.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="285" column="18" info="Function in derived class"/>
            <location file="tile.h" line="258" column="18" info="Virtual function in base class"/>
            <symbol>ExtractImage</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="299" column="10" info="Function in derived class"/>
            <location file="tile.h" line="194" column="18" info="Virtual function in base class"/>
            <symbol>setTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="302" column="19" info="Function in derived class"/>
            <location file="tile.h" line="212" column="19" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;copyTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="303" column="18" info="Function in derived class"/>
            <location file="tile.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>copyTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;syncTile&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="317" column="10" info="Function in derived class"/>
            <location file="tile.h" line="222" column="18" info="Virtual function in base class"/>
            <symbol>syncTile</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ExtractImage&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="324" column="10" info="Function in derived class"/>
            <location file="tile.h" line="192" column="18" info="Virtual function in base class"/>
            <symbol>ExtractImage</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Layer&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="351" column="23" info="Function in derived class"/>
            <location file="tile.h" line="94" column="31" info="Virtual function in base class"/>
            <symbol>Layer</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;set&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="354" column="18" info="Function in derived class"/>
            <location file="tile.h" line="86" column="18" info="Virtual function in base class"/>
            <symbol>set</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;mapToAncestors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="tileblock.cpp">
            <location file="tile.h" line="365" column="10" info="Function in derived class"/>
            <location file="tile.h" line="101" column="18" info="Virtual function in base class"/>
            <symbol>mapToAncestors</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="160" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="448" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="460" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="516" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="606" column="22"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;idx&apos; shadows outer variable" verbose="Local variable &apos;idx&apos; shadows outer variable" cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="217" column="12" info="Shadow variable"/>
            <location file="tileblock.cpp" line="199" column="8" info="Shadowed declaration"/>
            <symbol>idx</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;idx&apos; shadows outer variable" verbose="Local variable &apos;idx&apos; shadows outer variable" cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="305" column="12" info="Shadow variable"/>
            <location file="tileblock.cpp" line="287" column="8" info="Shadowed declaration"/>
            <symbol>idx</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;edata_old&apos; can be declared as reference to const" verbose="Variable &apos;edata_old&apos; can be declared as reference to const" cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="603" column="14" info="Variable &apos;edata_old&apos; can be declared as reference to const"/>
            <symbol>edata_old</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;edata_new&apos; can be declared as reference to const" verbose="Variable &apos;edata_new&apos; can be declared as reference to const" cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="608" column="15" info="Variable &apos;edata_new&apos; can be declared as reference to const"/>
            <symbol>edata_new</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;etile&apos; can be declared as pointer to const" verbose="Variable &apos;etile&apos; can be declared as pointer to const" cwe="398" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="390" column="12" info="Variable &apos;etile&apos; can be declared as pointer to const"/>
            <symbol>etile</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nlat&apos; is assigned a value that is never used." verbose="Variable &apos;nlat&apos; is assigned a value that is never used." cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="157" column="11"/>
            <symbol>nlat</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nlng&apos; is assigned a value that is never used." verbose="Variable &apos;nlng&apos; is assigned a value that is never used." cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="158" column="11"/>
            <symbol>nlng</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nlng&apos; is assigned a value that is never used." verbose="Variable &apos;nlng&apos; is assigned a value that is never used." cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="418" column="11"/>
            <symbol>nlng</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: scale" verbose="Unused variable: scale" cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="471" column="9"/>
            <symbol>scale</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: offset" verbose="Unused variable: offset" cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="471" column="16"/>
            <symbol>offset</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nlat&apos; is assigned a value that is never used." verbose="Variable &apos;nlat&apos; is assigned a value that is never used." cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="513" column="11"/>
            <symbol>nlat</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nlng&apos; is assigned a value that is never used." verbose="Variable &apos;nlng&apos; is assigned a value that is never used." cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="514" column="11"/>
            <symbol>nlng</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;useMask&apos; is assigned a value that is never used." verbose="Variable &apos;useMask&apos; is assigned a value that is never used." cwe="563" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="734" column="15"/>
            <symbol>useMask</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="ZTreeMgr.h:94:8" call-funcname="ReadData" call-argnr="2" file="ZTreeMgr.h" line="97" col="11" my-id="ZTreeMgr.h:96:15" my-argnr="4"/>
  </FileInfo>
  <FileInfo check="Class">
<class name="TreeNode" file="ZTreeMgr.h" line="18" col="1" hash="12582209069392340624"/>
<class name="ElevDisplayParam" file="tile.h" line="49" col="1" hash="2206908051769139680"/>
<class name="DXT1TileBlock" file="tile.h" line="254" col="1" hash="2755446779463985656"/>
<class name="SurfTileBlock" file="tile.h" line="268" col="1" hash="6776198391735882298"/>
<class name="MaskTileBlock" file="tile.h" line="279" col="1" hash="13939711328569631011"/>
<class name="ElevTileBlock" file="tile.h" line="292" col="1" hash="16926612009457531037"/>
<class name="ElevPatchMetaInfo" file="elv_io.h" line="9" col="1" hash="5356685785373992591"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tile.h:307:10" my-argnr="1" my-argname="mtileblock" file="tileblock.cpp" line="628" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tile.h:177:5" my-argnr="1" my-argname="tileblock" file="tileblock.cpp" line="26" col="10" value="0"/>
    <unsafe-usage my-id="tile.h:297:5" my-argnr="1" my-argname="etileblock" file="tileblock.cpp" line="343" col="12" value="0"/>
    <unsafe-usage my-id="tile.h:306:10" my-argnr="1" my-argname="fname" file="tileblock.cpp" line="477" col="15" value="0"/>
    <unsafe-usage my-id="tile.h:307:10" my-argnr="1" my-argname="mtileblock" file="tileblock.cpp" line="628" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl file="ZTreeMgr.h" functionName="size" lineNumber="64"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="67"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="70"/>
    <functiondecl file="ZTreeMgr.h" functionName="TOC" lineNumber="89"/>
    <functiondecl file="ZTreeMgr.h" functionName="ReadData" lineNumber="96"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="101"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="102"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="65"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="66"/>
    <functiondecl file="tile.h" functionName="Level" lineNumber="77"/>
    <functiondecl file="tile.h" functionName="iLat" lineNumber="78"/>
    <functiondecl file="tile.h" functionName="iLng" lineNumber="79"/>
    <functiondecl file="tile.h" functionName="subLevel" lineNumber="80"/>
    <functiondecl file="tile.h" functionName="subiLat" lineNumber="81"/>
    <functiondecl file="tile.h" functionName="subiLng" lineNumber="82"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="83"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="84"/>
    <functiondecl file="tile.h" functionName="setLevel" lineNumber="87"/>
    <functiondecl file="tile.h" functionName="setiLat" lineNumber="88"/>
    <functiondecl file="tile.h" functionName="setiLng" lineNumber="89"/>
    <functiondecl file="tile.h" functionName="setSubLevel" lineNumber="90"/>
    <functiondecl file="tile.h" functionName="setSubiLat" lineNumber="91"/>
    <functiondecl file="tile.h" functionName="setSubiLng" lineNumber="92"/>
    <functiondecl file="tile.h" functionName="root" lineNumber="97"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="129"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="130"/>
    <functiondecl file="tile.h" functionName="Level" lineNumber="179"/>
    <functiondecl file="tile.h" functionName="iLat0" lineNumber="181"/>
    <functiondecl file="tile.h" functionName="iLat1" lineNumber="182"/>
    <functiondecl file="tile.h" functionName="iLng0" lineNumber="183"/>
    <functiondecl file="tile.h" functionName="iLng1" lineNumber="184"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="185"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="186"/>
    <functiondecl file="tile.h" functionName="iLng_norm" lineNumber="187"/>
    <functiondecl file="tile.h" functionName="nLatBlock" lineNumber="188"/>
    <functiondecl file="tile.h" functionName="nLngBlock" lineNumber="189"/>
    <functiondecl file="tile.h" functionName="nBlock" lineNumber="190"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="260"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="261"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="300"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="301"/>
    <functiondecl file="tile.h" functionName="isModified" lineNumber="311"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="356"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="357"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="358"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="359"/>
    <functiondecl file="tile.h" functionName="isModified" lineNumber="360"/>
    <functiondecl file="tileblock.cpp" functionName="minSubLevel" lineNumber="45"/>
    <functiondecl file="tileblock.cpp" functionName="getTile" lineNumber="55"/>
    <functiondecl file="tileblock.cpp" functionName="_getTile" lineNumber="64"/>
    <functiondecl file="tileblock.cpp" functionName="getTile" lineNumber="73"/>
    <functiondecl file="tileblock.cpp" functionName="syncTiles" lineNumber="79"/>
    <functiondecl file="tileblock.cpp" functionName="hasAncestorData" lineNumber="86"/>
    <functiondecl file="tileblock.cpp" functionName="mapToAncestors" lineNumber="94"/>
    <functiondecl file="tileblock.cpp" functionName="syncTile" lineNumber="150"/>
    <functiondecl file="tileblock.cpp" functionName="Load" lineNumber="187"/>
    <functiondecl file="tileblock.cpp" functionName="ExtractImage" lineNumber="264"/>
    <functiondecl file="tileblock.cpp" functionName="Load" lineNumber="275"/>
    <functiondecl file="tileblock.cpp" functionName="Load" lineNumber="348"/>
    <functiondecl file="tileblock.cpp" functionName="setElevDisplayParam" lineNumber="376"/>
    <functiondecl file="tileblock.cpp" functionName="setTile" lineNumber="410"/>
    <functiondecl file="tileblock.cpp" functionName="Save" lineNumber="443"/>
    <functiondecl file="tileblock.cpp" functionName="SaveMod" lineNumber="455"/>
    <functiondecl file="tileblock.cpp" functionName="ExportPNG" lineNumber="467"/>
    <functiondecl file="tileblock.cpp" functionName="syncTile" lineNumber="508"/>
    <functiondecl file="tileblock.cpp" functionName="MatchNeighbourTiles" lineNumber="554"/>
    <functiondecl file="tileblock.cpp" functionName="setWaterMask" lineNumber="623"/>
    <functiondecl file="tileblock.cpp" functionName="nodeElevation" lineNumber="639"/>
    <functiondecl file="tileblock.cpp" functionName="nodeModElevation" lineNumber="645"/>
    <functiondecl file="tileblock.cpp" functionName="dataChanged" lineNumber="653"/>
    <functiondecl file="tileblock.cpp" functionName="RescanLimits" lineNumber="661"/>
    <functiondecl file="tileblock.cpp" functionName="ExtractModImage" lineNumber="710"/>
    <functioncall functionName="DBL_MAX"/>
    <functioncall functionName="DXT1Tile"/>
    <functioncall functionName="DXT1TileBlock"/>
    <functioncall functionName="ElevData"/>
    <functioncall functionName="ElevDisplayParam"/>
    <functioncall functionName="ElevTile"/>
    <functioncall functionName="ElevTileBlock"/>
    <functioncall functionName="ExtractModImage"/>
    <functioncall functionName="Idx"/>
    <functioncall functionName="Image"/>
    <functioncall functionName="InterpolateFromAncestor"/>
    <functioncall functionName="Level"/>
    <functioncall functionName="Load"/>
    <functioncall functionName="MaskTileBlock"/>
    <functioncall functionName="NodeSizeDeflated"/>
    <functioncall functionName="NodeSizeInflated"/>
    <functioncall functionName="ReadData"/>
    <functioncall functionName="RescanLimits"/>
    <functioncall functionName="Save"/>
    <functioncall functionName="SaveMod"/>
    <functioncall functionName="SurfTile"/>
    <functioncall functionName="SurfTileBlock"/>
    <functioncall functionName="Tile"/>
    <functioncall functionName="TileBlock"/>
    <functioncall functionName="TreeNode"/>
    <functioncall functionName="ZTreeMgr"/>
    <functioncall functionName="_getTile"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="cmap"/>
    <functioncall functionName="copyTile"/>
    <functioncall functionName="dataChanged"/>
    <functioncall functionName="elvwrite_png"/>
    <functioncall functionName="end"/>
    <functioncall functionName="fabs"/>
    <functioncall functionName="false"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="getBaseData"/>
    <functioncall functionName="getData"/>
    <functioncall functionName="getTile"/>
    <functioncall functionName="iLng_norm"/>
    <functioncall functionName="mapToAncestors"/>
    <functioncall functionName="max"/>
    <functioncall functionName="min"/>
    <functioncall functionName="minmax_element"/>
    <functioncall functionName="nLat"/>
    <functioncall functionName="nLng"/>
    <functioncall functionName="pair"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="set"/>
    <functioncall functionName="setTile"/>
    <functioncall functionName="size"/>
    <functioncall functionName="strcat"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="string"/>
    <functioncall functionName="subLevel"/>
    <functioncall functionName="syncTile"/>
    <functioncall functionName="syncTiles"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="vector"/>
  </FileInfo>
        <error id="symbolDatabaseWarning" severity="debug" msg="Executable scope &apos;getTile&apos; with unknown function." verbose="Executable scope &apos;getTile&apos; with unknown function." file0="tileblock.cpp">
            <location file="tileblock.cpp" line="754" column="21"/>
        </error>
        <error id="valueFlowBailout" severity="debug" msg="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" verbose="valueflow.cpp:4755:(valueFlow) bailout: valueFlowAfterCondition: bailing in conditional block" file0="tileblock.cpp">
            <location file="tileblock.cpp" line="761" column="0"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="ZTreeMgr.h:94:8" call-funcname="ReadData" call-argnr="2" file="ZTreeMgr.h" line="97" col="11" my-id="ZTreeMgr.h:96:15" my-argnr="4"/>
  </FileInfo>
  <FileInfo check="Class">
<class name="TreeNode" file="ZTreeMgr.h" line="18" col="1" hash="12582209069392340624"/>
<class name="ElevDisplayParam" file="tile.h" line="49" col="1" hash="2206908051769139680"/>
<class name="DXT1TileBlock" file="tile.h" line="254" col="1" hash="2755446779463985656"/>
<class name="SurfTileBlock" file="tile.h" line="268" col="1" hash="6776198391735882298"/>
<class name="MaskTileBlock" file="tile.h" line="279" col="1" hash="13939711328569631011"/>
<class name="ElevTileBlock" file="tile.h" line="292" col="1" hash="16926612009457531037"/>
<class name="ElevPatchMetaInfo" file="elv_io.h" line="9" col="1" hash="5356685785373992591"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tile.h:307:10" my-argnr="1" my-argname="mtileblock" file="tileblock.cpp" line="628" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tile.h:177:5" my-argnr="1" my-argname="tileblock" file="tileblock.cpp" line="26" col="10" value="0"/>
    <unsafe-usage my-id="tile.h:297:5" my-argnr="1" my-argname="etileblock" file="tileblock.cpp" line="343" col="12" value="0"/>
    <unsafe-usage my-id="tile.h:306:10" my-argnr="1" my-argname="fname" file="tileblock.cpp" line="477" col="15" value="0"/>
    <unsafe-usage my-id="tile.h:307:10" my-argnr="1" my-argname="mtileblock" file="tileblock.cpp" line="628" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl file="ZTreeMgr.h" functionName="size" lineNumber="64"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="67"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="70"/>
    <functiondecl file="ZTreeMgr.h" functionName="TOC" lineNumber="89"/>
    <functiondecl file="ZTreeMgr.h" functionName="ReadData" lineNumber="96"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeDeflated" lineNumber="101"/>
    <functiondecl file="ZTreeMgr.h" functionName="NodeSizeInflated" lineNumber="102"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="65"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="66"/>
    <functiondecl file="tile.h" functionName="Level" lineNumber="77"/>
    <functiondecl file="tile.h" functionName="iLat" lineNumber="78"/>
    <functiondecl file="tile.h" functionName="iLng" lineNumber="79"/>
    <functiondecl file="tile.h" functionName="subLevel" lineNumber="80"/>
    <functiondecl file="tile.h" functionName="subiLat" lineNumber="81"/>
    <functiondecl file="tile.h" functionName="subiLng" lineNumber="82"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="83"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="84"/>
    <functiondecl file="tile.h" functionName="setLevel" lineNumber="87"/>
    <functiondecl file="tile.h" functionName="setiLat" lineNumber="88"/>
    <functiondecl file="tile.h" functionName="setiLng" lineNumber="89"/>
    <functiondecl file="tile.h" functionName="setSubLevel" lineNumber="90"/>
    <functiondecl file="tile.h" functionName="setSubiLat" lineNumber="91"/>
    <functiondecl file="tile.h" functionName="setSubiLng" lineNumber="92"/>
    <functiondecl file="tile.h" functionName="root" lineNumber="97"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="129"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="130"/>
    <functiondecl file="tile.h" functionName="Level" lineNumber="179"/>
    <functiondecl file="tile.h" functionName="iLat0" lineNumber="181"/>
    <functiondecl file="tile.h" functionName="iLat1" lineNumber="182"/>
    <functiondecl file="tile.h" functionName="iLng0" lineNumber="183"/>
    <functiondecl file="tile.h" functionName="iLng1" lineNumber="184"/>
    <functiondecl file="tile.h" functionName="nLat" lineNumber="185"/>
    <functiondecl file="tile.h" functionName="nLng" lineNumber="186"/>
    <functiondecl file="tile.h" functionName="iLng_norm" lineNumber="187"/>
    <functiondecl file="tile.h" functionName="nLatBlock" lineNumber="188"/>
    <functiondecl file="tile.h" functionName="nLngBlock" lineNumber="189"/>
    <functiondecl file="tile.h" functionName="nBlock" lineNumber="190"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="260"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="261"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="300"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="301"/>
    <functiondecl file="tile.h" functionName="isModified" lineNumber="311"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="356"/>
    <functiondecl file="tile.h" functionName="getData" lineNumber="357"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="358"/>
    <functiondecl file="tile.h" functionName="getBaseData" lineNumber="359"/>
    <functiondecl file="tile.h" functionName="isModified" lineNumber="360"/>
    <functiondecl file="tileblock.cpp" functionName="minSubLevel" lineNumber="45"/>
    <functiondecl file="tileblock.cpp" functionName="getTile" lineNumber="55"/>
    <functiondecl file="tileblock.cpp" functionName="_getTile" lineNumber="64"/>
    <functiondecl file="tileblock.cpp" functionName="getTile" lineNumber="73"/>
    <functiondecl file="tileblock.cpp" functionName="syncTiles" lineNumber="79"/>
    <functiondecl file="tileblock.cpp" functionName="hasAncestorData" lineNumber="86"/>
    <functiondecl file="tileblock.cpp" functionName="mapToAncestors" lineNumber="94"/>
    <functiondecl file="tileblock.cpp" functionName="syncTile" lineNumber="150"/>
    <functiondecl file="tileblock.cpp" functionName="Load" lineNumber="187"/>
    <functiondecl file="tileblock.cpp" functionName="ExtractImage" lineNumber="264"/>
    <functiondecl file="tileblock.cpp" functionName="Load" lineNumber="275"/>
    <functiondecl file="tileblock.cpp" functionName="Load" lineNumber="348"/>
    <functiondecl file="tileblock.cpp" functionName="setElevDisplayParam" lineNumber="376"/>
    <functiondecl file="tileblock.cpp" functionName="setTile" lineNumber="410"/>
    <functiondecl file="tileblock.cpp" functionName="Save" lineNumber="443"/>
    <functiondecl file="tileblock.cpp" functionName="SaveMod" lineNumber="455"/>
    <functiondecl file="tileblock.cpp" functionName="ExportPNG" lineNumber="467"/>
    <functiondecl file="tileblock.cpp" functionName="syncTile" lineNumber="508"/>
    <functiondecl file="tileblock.cpp" functionName="MatchNeighbourTiles" lineNumber="554"/>
    <functiondecl file="tileblock.cpp" functionName="setWaterMask" lineNumber="623"/>
    <functiondecl file="tileblock.cpp" functionName="nodeElevation" lineNumber="639"/>
    <functiondecl file="tileblock.cpp" functionName="nodeModElevation" lineNumber="645"/>
    <functiondecl file="tileblock.cpp" functionName="dataChanged" lineNumber="653"/>
    <functiondecl file="tileblock.cpp" functionName="RescanLimits" lineNumber="661"/>
    <functiondecl file="tileblock.cpp" functionName="ExtractModImage" lineNumber="710"/>
    <functioncall functionName="DBL_MAX"/>
    <functioncall functionName="DXT1Tile"/>
    <functioncall functionName="DXT1TileBlock"/>
    <functioncall functionName="ElevData"/>
    <functioncall functionName="ElevDisplayParam"/>
    <functioncall functionName="ElevTile"/>
    <functioncall functionName="ElevTileBlock"/>
    <functioncall functionName="ExtractModImage"/>
    <functioncall functionName="Idx"/>
    <functioncall functionName="Image"/>
    <functioncall functionName="InterpolateFromAncestor"/>
    <functioncall functionName="Level"/>
    <functioncall functionName="Load"/>
    <functioncall functionName="MaskTileBlock"/>
    <functioncall functionName="NodeSizeDeflated"/>
    <functioncall functionName="NodeSizeInflated"/>
    <functioncall functionName="ReadData"/>
    <functioncall functionName="RescanLimits"/>
    <functioncall functionName="Save"/>
    <functioncall functionName="SaveMod"/>
    <functioncall functionName="SurfTile"/>
    <functioncall functionName="SurfTileBlock"/>
    <functioncall functionName="Tile"/>
    <functioncall functionName="TileBlock"/>
    <functioncall functionName="TreeNode"/>
    <functioncall functionName="ZTreeMgr"/>
    <functioncall functionName="_getTile"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="cmap"/>
    <functioncall functionName="copyTile"/>
    <functioncall functionName="dataChanged"/>
    <functioncall functionName="elvwrite_png"/>
    <functioncall functionName="end"/>
    <functioncall functionName="fabs"/>
    <functioncall functionName="false"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="getBaseData"/>
    <functioncall functionName="getData"/>
    <functioncall functionName="getTile"/>
    <functioncall functionName="iLng_norm"/>
    <functioncall functionName="mapToAncestors"/>
    <functioncall functionName="max"/>
    <functioncall functionName="max_element"/>
    <functioncall functionName="min"/>
    <functioncall functionName="min_element"/>
    <functioncall functionName="minmax_element"/>
    <functioncall functionName="nLat"/>
    <functioncall functionName="nLng"/>
    <functioncall functionName="pair"/>
    <functioncall functionName="resize"/>
    <functioncall functionName="set"/>
    <functioncall functionName="setTile"/>
    <functioncall functionName="size"/>
    <functioncall functionName="strcat"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="string"/>
    <functioncall functionName="subLevel"/>
    <functioncall functionName="syncTile"/>
    <functioncall functionName="syncTiles"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="vector"/>
  </FileInfo>
        <error id="purgedConfiguration" severity="information" msg="The configuration &apos;_M_X64;__x86_64__&apos; was not checked because its code equals another one." verbose="The configuration &apos;_M_X64;__x86_64__&apos; was not checked because its code equals another one.">
            <location file="tileblock.cpp" line="0" column="0"/>
        </error>
</analyzerinfo>
